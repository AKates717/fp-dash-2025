{"title":"Rewatchables","markdown":{"yaml":{"title":"Rewatchables","format":{"dashboard":{"logo":"images/Rewatchables_Pod_Logo.png","orientation":"columns"}}},"headingText":"Column","headingAttr":{"id":"","classes":[],"keyvalue":[["width","35%"]]},"containsRefs":false,"markdown":"\n\n\nText for column 1\n\nText for column 112\n\n```{r, loadpackages}\n#| echo: false\n#| include: false\n\nlibrary(tidyverse)\nlibrary(httr2)\n```\n\n## Column {width=\"65%\"}\n\nText for column 2\n\n### Row {height=\"10%\"}\n\n```{r, createaccesstoken}\n#| echo: false\n#| include: false\n\nclient_id <- Sys.getenv(\"SPOTIFY_CLIENT_ID\")\nclient_secret <- Sys.getenv(\"SPOTIFY_CLIENT_SECRET\")\n\n# curl_translate('curl -X POST \"https://accounts.spotify.com/api/token\" \\\n#      -H \"Content-Type: application/x-www-form-urlencoded\" \\\n#      -d \"grant_type=client_credentials&client_id=your-client-id&client_secret=your-client-secret\"\n# ')\n\nreq_access_token <- request(\"https://accounts.spotify.com/api/token\") |> \n  req_method(\"POST\") |> \n  req_body_raw(paste0(\n    \"grant_type=client_credentials&client_id=\",\n    client_id,\n    \"&client_secret=\",\n    client_secret \n    ), \"application/x-www-form-urlencoded\") |> \n  req_perform() |>\n  resp_body_json()\n\naccess_token <- req_access_token$access_token\n```\n\n```{r, gettheplaylist}\n\n#playlist_id <- \"37i9dQZF1DXcBWIGoYBM5M\"\n\n# tth <- request(\"https://api.spotify.com/v1/playlists/6sragYMYn4QDDTZXxoEC1H\") |> \n#   req_method(\"GET\") |> \n#   req_headers(\n#     Authorization = paste0(\"Bearer \", spotify_access_token)\n#   ) |> \n#   req_perform() |>\n#   resp_body_json()\n# \n# top_hits_df <- data.frame(\n#   song_name = unlist(lapply(tth$tracks$items, FUN = function(x) {x$track$name })),\n#   song_id = unlist(lapply(tth$tracks$items, FUN = function(x) {x$track$id })),\n#   artist_name = unlist(lapply(tth$tracks$items, FUN = function(x) {x$track$album$artists[[1]]$name})),\n#   album_art = unlist(lapply(tth$tracks$items, FUN = function(x) {x$track$album$images[[1]]$url})),\n#   track_duration = unlist(lapply(tth$tracks$items, FUN = function(x) {x$track$duration_ms})), \n#   popularity = unlist(lapply(tth$tracks$items, FUN = function(x) {x$track$popularity}))\n#   )\n\n```\n\n### Row {height=\"70%\"}\n\n```{r, rewatchables}\n# #| echo: false\n# #| include: false\n# \n# show_id <- \"1lUPomulZRPquVAOOd56EW\"  # Replace with your podcast's show ID\n# \n# # Step 2: Get show data\n# show_resp <- request(paste0(\"https://api.spotify.com/v1/shows/\", show_id)) |>\n#   req_headers(Authorization = paste(\"Bearer\", spotify_access_token)) |>\n#   req_perform()\n# \n# show_data <- show_resp |> resp_body_json()\n# \n# \n# \n# episodes_resp <- request(paste0(\"https://api.spotify.com/v1/shows/\", show_id, \"/episodes\")) |>\n#   req_headers(Authorization = paste(\"Bearer\", spotify_access_token)) |>\n#   req_url_query(limit = 50) |>\n#   req_perform()\n# \n# episodes_data <- episodes_resp |> resp_body_json()\n# episodes <- episodes_data$items\n# \n# library(purrr)\n# library(dplyr)\n# \n# episodes_df <- map_dfr(episodes, function(ep) {\n#   tibble(\n#     name = ep$name,\n#     release_date = ep$release_date,\n#     duration_ms = ep$duration_ms,\n#     description = ep$description,\n#     audio_preview_url = ep$audio_preview_url\n#   )\n# })\n\n\n```\n\n### Row - Table {height=\"20%\"}\n\n```{r, episodes_function}\n#| echo: false\n#| include: false\n\nshow_id <- \"1lUPomulZRPquVAOOd56EW\"\n\n\nget_all_episodes <- function(show_id, access_token) {\n  limit <- 50\n  offset <- 0\n  all_episodes <- list()\n  \n  repeat {\n    url <- paste0(\"https://api.spotify.com/v1/shows/\", show_id, \"/episodes\")\n    \n    resp <- request(url) |>\n      req_headers(Authorization = paste(\"Bearer\", access_token)) |>\n      req_url_query(limit = limit, offset = offset) |>\n      req_perform()\n    \n    content <- resp |> resp_body_json()\n    \n    # Append items\n    all_episodes <- append(all_episodes, content$items)\n    \n    # Break if there's no more 'next' page\n    if (is.null(content[[\"next\"]])) {\n      break\n    }\n    \n    offset <- offset + limit\n  }\n  \n  # Convert to dataframe\n  df <- map_dfr(all_episodes, function(ep) {\n    tibble(\n      name = ep$name,\n      release_date = ep$release_date,\n      duration_ms = ep$duration_ms,\n      description = ep$description,\n      episode_url = ep$external_urls$spotify\n    )\n  })\n  \n  return(df)\n}\n\n\n```\n\n```{r, episodes_table}\nshow_id <- \"1lUPomulZRPquVAOOd56EW\"\nepisodes_df <- get_all_episodes(show_id, access_token)\n\nepisodes_df %>%\nslice_head(n = 10)\n```\n","srcMarkdownNoYaml":"\n\n## Column {width=\"35%\"}\n\nText for column 1\n\nText for column 112\n\n```{r, loadpackages}\n#| echo: false\n#| include: false\n\nlibrary(tidyverse)\nlibrary(httr2)\n```\n\n## Column {width=\"65%\"}\n\nText for column 2\n\n### Row {height=\"10%\"}\n\n```{r, createaccesstoken}\n#| echo: false\n#| include: false\n\nclient_id <- Sys.getenv(\"SPOTIFY_CLIENT_ID\")\nclient_secret <- Sys.getenv(\"SPOTIFY_CLIENT_SECRET\")\n\n# curl_translate('curl -X POST \"https://accounts.spotify.com/api/token\" \\\n#      -H \"Content-Type: application/x-www-form-urlencoded\" \\\n#      -d \"grant_type=client_credentials&client_id=your-client-id&client_secret=your-client-secret\"\n# ')\n\nreq_access_token <- request(\"https://accounts.spotify.com/api/token\") |> \n  req_method(\"POST\") |> \n  req_body_raw(paste0(\n    \"grant_type=client_credentials&client_id=\",\n    client_id,\n    \"&client_secret=\",\n    client_secret \n    ), \"application/x-www-form-urlencoded\") |> \n  req_perform() |>\n  resp_body_json()\n\naccess_token <- req_access_token$access_token\n```\n\n```{r, gettheplaylist}\n\n#playlist_id <- \"37i9dQZF1DXcBWIGoYBM5M\"\n\n# tth <- request(\"https://api.spotify.com/v1/playlists/6sragYMYn4QDDTZXxoEC1H\") |> \n#   req_method(\"GET\") |> \n#   req_headers(\n#     Authorization = paste0(\"Bearer \", spotify_access_token)\n#   ) |> \n#   req_perform() |>\n#   resp_body_json()\n# \n# top_hits_df <- data.frame(\n#   song_name = unlist(lapply(tth$tracks$items, FUN = function(x) {x$track$name })),\n#   song_id = unlist(lapply(tth$tracks$items, FUN = function(x) {x$track$id })),\n#   artist_name = unlist(lapply(tth$tracks$items, FUN = function(x) {x$track$album$artists[[1]]$name})),\n#   album_art = unlist(lapply(tth$tracks$items, FUN = function(x) {x$track$album$images[[1]]$url})),\n#   track_duration = unlist(lapply(tth$tracks$items, FUN = function(x) {x$track$duration_ms})), \n#   popularity = unlist(lapply(tth$tracks$items, FUN = function(x) {x$track$popularity}))\n#   )\n\n```\n\n### Row {height=\"70%\"}\n\n```{r, rewatchables}\n# #| echo: false\n# #| include: false\n# \n# show_id <- \"1lUPomulZRPquVAOOd56EW\"  # Replace with your podcast's show ID\n# \n# # Step 2: Get show data\n# show_resp <- request(paste0(\"https://api.spotify.com/v1/shows/\", show_id)) |>\n#   req_headers(Authorization = paste(\"Bearer\", spotify_access_token)) |>\n#   req_perform()\n# \n# show_data <- show_resp |> resp_body_json()\n# \n# \n# \n# episodes_resp <- request(paste0(\"https://api.spotify.com/v1/shows/\", show_id, \"/episodes\")) |>\n#   req_headers(Authorization = paste(\"Bearer\", spotify_access_token)) |>\n#   req_url_query(limit = 50) |>\n#   req_perform()\n# \n# episodes_data <- episodes_resp |> resp_body_json()\n# episodes <- episodes_data$items\n# \n# library(purrr)\n# library(dplyr)\n# \n# episodes_df <- map_dfr(episodes, function(ep) {\n#   tibble(\n#     name = ep$name,\n#     release_date = ep$release_date,\n#     duration_ms = ep$duration_ms,\n#     description = ep$description,\n#     audio_preview_url = ep$audio_preview_url\n#   )\n# })\n\n\n```\n\n### Row - Table {height=\"20%\"}\n\n```{r, episodes_function}\n#| echo: false\n#| include: false\n\nshow_id <- \"1lUPomulZRPquVAOOd56EW\"\n\n\nget_all_episodes <- function(show_id, access_token) {\n  limit <- 50\n  offset <- 0\n  all_episodes <- list()\n  \n  repeat {\n    url <- paste0(\"https://api.spotify.com/v1/shows/\", show_id, \"/episodes\")\n    \n    resp <- request(url) |>\n      req_headers(Authorization = paste(\"Bearer\", access_token)) |>\n      req_url_query(limit = limit, offset = offset) |>\n      req_perform()\n    \n    content <- resp |> resp_body_json()\n    \n    # Append items\n    all_episodes <- append(all_episodes, content$items)\n    \n    # Break if there's no more 'next' page\n    if (is.null(content[[\"next\"]])) {\n      break\n    }\n    \n    offset <- offset + limit\n  }\n  \n  # Convert to dataframe\n  df <- map_dfr(all_episodes, function(ep) {\n    tibble(\n      name = ep$name,\n      release_date = ep$release_date,\n      duration_ms = ep$duration_ms,\n      description = ep$description,\n      episode_url = ep$external_urls$spotify\n    )\n  })\n  \n  return(df)\n}\n\n\n```\n\n```{r, episodes_table}\nshow_id <- \"1lUPomulZRPquVAOOd56EW\"\nepisodes_df <- get_all_episodes(show_id, access_token)\n\nepisodes_df %>%\nslice_head(n = 10)\n```\n"},"formats":{"dashboard":{"identifier":{"display-name":"HTML","target-format":"dashboard","base-format":"dashboard"},"execute":{"fig-width":8,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":"all","plotly-connected":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"dashboard.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.39","page-layout":"custom","title":"Rewatchables","logo":"images/Rewatchables_Pod_Logo.png","orientation":"columns"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}